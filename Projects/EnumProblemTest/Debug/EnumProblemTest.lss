
EnumProblemTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000014a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  0000014a  000001de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800060  00800060  000001de  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000001de  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  0000020e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000001cf  00000000  00000000  0000024e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000164  00000000  00000000  0000041d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000011e  00000000  00000000  00000581  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b4  00000000  00000000  000006a0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000229  00000000  00000000  00000754  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000014c  00000000  00000000  0000097d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00000ac9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	15 c0       	rjmp	.+42     	; 0x2c <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>
  26:	1a c0       	rjmp	.+52     	; 0x5c <__bad_interrupt>
  28:	19 c0       	rjmp	.+50     	; 0x5c <__bad_interrupt>

0000002a <__ctors_start>:
  2a:	91 00       	.word	0x0091	; ????

0000002c <__ctors_end>:
  2c:	11 24       	eor	r1, r1
  2e:	1f be       	out	0x3f, r1	; 63
  30:	cf ed       	ldi	r28, 0xDF	; 223
  32:	cd bf       	out	0x3d, r28	; 61

00000034 <__do_clear_bss>:
  34:	20 e0       	ldi	r18, 0x00	; 0
  36:	a0 e6       	ldi	r26, 0x60	; 96
  38:	b0 e0       	ldi	r27, 0x00	; 0
  3a:	01 c0       	rjmp	.+2      	; 0x3e <.do_clear_bss_start>

0000003c <.do_clear_bss_loop>:
  3c:	1d 92       	st	X+, r1

0000003e <.do_clear_bss_start>:
  3e:	a2 36       	cpi	r26, 0x62	; 98
  40:	b2 07       	cpc	r27, r18
  42:	e1 f7       	brne	.-8      	; 0x3c <.do_clear_bss_loop>

00000044 <__do_global_ctors>:
  44:	10 e0       	ldi	r17, 0x00	; 0
  46:	cc e2       	ldi	r28, 0x2C	; 44
  48:	d0 e0       	ldi	r29, 0x00	; 0
  4a:	03 c0       	rjmp	.+6      	; 0x52 <__do_global_ctors+0xe>
  4c:	22 97       	sbiw	r28, 0x02	; 2
  4e:	fe 01       	movw	r30, r28
  50:	76 d0       	rcall	.+236    	; 0x13e <__tablejump__>
  52:	ca 32       	cpi	r28, 0x2A	; 42
  54:	d1 07       	cpc	r29, r17
  56:	d1 f7       	brne	.-12     	; 0x4c <__do_global_ctors+0x8>
  58:	2e d0       	rcall	.+92     	; 0xb6 <main>
  5a:	75 c0       	rjmp	.+234    	; 0x146 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <_ZN1AC1Eh>:
	 "LDI %[thisReg2], %[thisPtr2]"
	 "RCALL PC+%[funcAddr]" )*/
class A
{
public:
	A( unsigned char eorValue )	
  5e:	cf 93       	push	r28
  60:	df 93       	push	r29
  62:	cd b7       	in	r28, 0x3d	; 61
  64:	dd 27       	eor	r29, r29
  66:	c3 50       	subi	r28, 0x03	; 3
  68:	cd bf       	out	0x3d, r28	; 61
  6a:	9a 83       	std	Y+2, r25	; 0x02
  6c:	89 83       	std	Y+1, r24	; 0x01
  6e:	6b 83       	std	Y+3, r22	; 0x03
	: m_MemberOutputTest( eorValue )
  70:	89 81       	ldd	r24, Y+1	; 0x01
  72:	9a 81       	ldd	r25, Y+2	; 0x02
  74:	2b 81       	ldd	r18, Y+3	; 0x03
  76:	fc 01       	movw	r30, r24
  78:	20 83       	st	Z, r18
	{}
  7a:	cd 5f       	subi	r28, 0xFD	; 253
  7c:	cd bf       	out	0x3d, r28	; 61
  7e:	df 91       	pop	r29
  80:	cf 91       	pop	r28
  82:	08 95       	ret

00000084 <_ZN1A11doSomethingEv>:
		
	void doSomething()
  84:	cf 93       	push	r28
  86:	df 93       	push	r29
  88:	00 d0       	rcall	.+0      	; 0x8a <_ZN1A11doSomethingEv+0x6>
  8a:	cd b7       	in	r28, 0x3d	; 61
  8c:	dd 27       	eor	r29, r29
  8e:	9a 83       	std	Y+2, r25	; 0x02
  90:	89 83       	std	Y+1, r24	; 0x01

00000092 <callable>:
	{
		asm volatile ( "callable:"::);
		PORTB ^= m_MemberOutputTest;
  92:	88 e3       	ldi	r24, 0x38	; 56
  94:	90 e0       	ldi	r25, 0x00	; 0
  96:	28 e3       	ldi	r18, 0x38	; 56
  98:	30 e0       	ldi	r19, 0x00	; 0
  9a:	f9 01       	movw	r30, r18
  9c:	40 81       	ld	r20, Z
  9e:	29 81       	ldd	r18, Y+1	; 0x01
  a0:	3a 81       	ldd	r19, Y+2	; 0x02
  a2:	f9 01       	movw	r30, r18
  a4:	20 81       	ld	r18, Z
  a6:	24 27       	eor	r18, r20
  a8:	fc 01       	movw	r30, r24
  aa:	20 83       	st	Z, r18
	}
  ac:	ce 5f       	subi	r28, 0xFE	; 254
  ae:	cd bf       	out	0x3d, r28	; 61
  b0:	df 91       	pop	r29
  b2:	cf 91       	pop	r28
  b4:	08 95       	ret

000000b6 <main>:

A doofuss(0x0F) ;
A foosuss(0xF0) ;

int main(void)
{
  b6:	cf 93       	push	r28
  b8:	df 93       	push	r29
  ba:	cd b7       	in	r28, 0x3d	; 61
  bc:	dd 27       	eor	r29, r29
	wdt_disable();
  be:	88 e1       	ldi	r24, 0x18	; 24
  c0:	0f b6       	in	r0, 0x3f	; 63
  c2:	f8 94       	cli
  c4:	81 bd       	out	0x21, r24	; 33
  c6:	11 bc       	out	0x21, r1	; 33
  c8:	0f be       	out	0x3f, r0	; 63
	
	while(1){		
		doofuss.doSomething();
  ca:	80 e6       	ldi	r24, 0x60	; 96
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	da df       	rcall	.-76     	; 0x84 <_ZN1A11doSomethingEv>
		foosuss.doSomething();
  d0:	81 e6       	ldi	r24, 0x61	; 97
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	d7 df       	rcall	.-82     	; 0x84 <_ZN1A11doSomethingEv>
		asm volatile (  "LDI R24,0x60\n\t"
						"LDI R25,0x00\n\t"
						"RCALL callable"
						::
						);
  d6:	80 e6       	ldi	r24, 0x60	; 96
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	db df       	rcall	.-74     	; 0x92 <callable>
};

A doofuss(0x0F) ;
A foosuss(0xF0) ;

int main(void)
  dc:	f6 cf       	rjmp	.-20     	; 0xca <main+0x14>

000000de <_Z41__static_initialization_and_destruction_0ii>:
						"LDI R25,0x00\n\t"
						"RCALL callable"
						::
						);
	}
}
  de:	cf 93       	push	r28
  e0:	df 93       	push	r29
  e2:	cd b7       	in	r28, 0x3d	; 61
  e4:	dd 27       	eor	r29, r29
  e6:	c4 50       	subi	r28, 0x04	; 4
  e8:	cd bf       	out	0x3d, r28	; 61
  ea:	9a 83       	std	Y+2, r25	; 0x02
  ec:	89 83       	std	Y+1, r24	; 0x01
  ee:	7c 83       	std	Y+4, r23	; 0x04
  f0:	6b 83       	std	Y+3, r22	; 0x03
  f2:	89 81       	ldd	r24, Y+1	; 0x01
  f4:	9a 81       	ldd	r25, Y+2	; 0x02
  f6:	81 30       	cpi	r24, 0x01	; 1
  f8:	91 05       	cpc	r25, r1
  fa:	71 f4       	brne	.+28     	; 0x118 <__stack+0x39>
  fc:	8b 81       	ldd	r24, Y+3	; 0x03
  fe:	9c 81       	ldd	r25, Y+4	; 0x04
 100:	8f 3f       	cpi	r24, 0xFF	; 255
 102:	2f ef       	ldi	r18, 0xFF	; 255
 104:	92 07       	cpc	r25, r18
 106:	41 f4       	brne	.+16     	; 0x118 <__stack+0x39>
protected:
private:
	unsigned char m_MemberOutputTest;
};

A doofuss(0x0F) ;
 108:	6f e0       	ldi	r22, 0x0F	; 15
 10a:	80 e6       	ldi	r24, 0x60	; 96
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	a7 df       	rcall	.-178    	; 0x5e <_ZN1AC1Eh>
A foosuss(0xF0) ;
 110:	60 ef       	ldi	r22, 0xF0	; 240
 112:	81 e6       	ldi	r24, 0x61	; 97
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	a3 df       	rcall	.-186    	; 0x5e <_ZN1AC1Eh>
						"LDI R25,0x00\n\t"
						"RCALL callable"
						::
						);
	}
}
 118:	cc 5f       	subi	r28, 0xFC	; 252
 11a:	cd bf       	out	0x3d, r28	; 61
 11c:	df 91       	pop	r29
 11e:	cf 91       	pop	r28
 120:	08 95       	ret

00000122 <_GLOBAL__sub_I_doofuss>:
 122:	cf 93       	push	r28
 124:	df 93       	push	r29
 126:	cd b7       	in	r28, 0x3d	; 61
 128:	dd 27       	eor	r29, r29
 12a:	6f ef       	ldi	r22, 0xFF	; 255
 12c:	7f ef       	ldi	r23, 0xFF	; 255
 12e:	81 e0       	ldi	r24, 0x01	; 1
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	d5 df       	rcall	.-86     	; 0xde <_Z41__static_initialization_and_destruction_0ii>
 134:	df 91       	pop	r29
 136:	cf 91       	pop	r28
 138:	08 95       	ret

0000013a <__tablejump2__>:
 13a:	ee 0f       	add	r30, r30
 13c:	ff 1f       	adc	r31, r31

0000013e <__tablejump__>:
 13e:	05 90       	lpm	r0, Z+
 140:	f4 91       	lpm	r31, Z
 142:	e0 2d       	mov	r30, r0
 144:	09 94       	ijmp

00000146 <_exit>:
 146:	f8 94       	cli

00000148 <__stop_program>:
 148:	ff cf       	rjmp	.-2      	; 0x148 <__stop_program>
